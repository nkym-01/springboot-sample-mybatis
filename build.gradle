/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
buildscript {
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:$springVersion")
  }
  repositories {
    jcenter()
  }
}

plugins {
  id 'java'
  id 'idea'
  id 'eclipse'
  id 'jacoco'

  id 'io.spring.dependency-management' version '1.0.6.RELEASE'
  id 'org.springframework.boot' version '2.0.5.RELEASE'
}

apply plugin: 'war'
// apply plugin: 'org.springframework.boot'

sourceCompatibility = "$javaVersion" // -source
targetCompatibility = "$javaVersion" // -target

repositories {
  mavenCentral()
  jcenter()
}

dependencies {
  compile("org.springframework.boot:spring-boot-starter-web")
  compile("org.springframework.boot:spring-boot-starter-security")
  runtime('org.springframework.boot:spring-boot-devtools')
  compile("org.thymeleaf:thymeleaf-spring5:3.0.9.RELEASE")
  compile("nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect")
  compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSpringBootStarterVersion}")
//  compile("org.projectlombok:lombok:1.18.12")
//  implementation 'org.slf4j:slf4j-api:1.7.25'
//  implementation 'org.slf4j:slf4j-simple:1.7.25'
//  implementation 'org.springframework.boot:spring-boot-starter-logging'
//  runtimeOnly 'org.slf4j:log4j-over-slf4j'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  compile("net.sourceforge.nekohtml:nekohtml:1.9.15+")

  compile('mysql:mysql-connector-java:6.0.6')

  testCompile("org.springframework.boot:spring-boot-starter-test")
  testCompile("org.mybatis.spring.boot:mybatis-spring-boot-starter-test:${mybatisSpringBootStarterVersion}")
}
compileJava {
    options.encoding = "$defaultEncoding"
}
compileTestJava {
    options.encoding = "$defaultEncoding"
}

bootWar {
  mainClassName = 'com.github.narh.sample.mybatis.Application'
}

springBoot {
  //executable = true
}

bootRun {
  jvmArgs = [ "-Dfile.encoding=$defaultEncoding" ]
}

eclipse {
  project {
    natures "org.springsource.ide.eclipse.gradle.core.nature"
  }

  classpath.file {
    whenMerged { classpath ->
      classpath.entries.findAll { entry ->
        entry.kind == "output"
      }*.path = "build/classes"
    }
  }
}
